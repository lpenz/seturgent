---
language: c
script:
  - SRC_DIR=$PWD
  - mkdir ../build ../install
  - cd ../build
  - cmake -DCMAKE_INSTALL_PREFIX=../install "$SRC_DIR"
  - make VERBOSE=1
  - make install
jobs:
  include:
    - env: [ ACTION=omnilint ]
      language: generic
      install: docker pull lpenz/omnilint
      script: docker run --rm -v "$PWD:$PWD" -e "RWD=$PWD" -e "MY_UID=$UID" lpenz/omnilint
    - env: [ ACTION=format ]
      language: generic
      install: docker pull debian:stretch
      script:
        - docker run -d --name debian -v "$PWD:$PWD" debian:stretch sleep 9999999999
        - docker exec -t debian /bin/bash -c "apt-get update && apt-get install -y --no-install-recommends clang-format"
        - docker exec -t debian find "$PWD" \( -name '*.[ch]' -o -name '*.cc' \) -exec clang-format -i {} +
        - git diff --exit-code
    - env: [ ACTION=clang-check+tidy ]
      language: generic
      install: docker pull debian:stretch
      script:
        - docker run -d --name debian -v "$PWD:$PWD" debian:stretch sleep 9999999999
        - docker exec -t debian /bin/bash -c "apt-get update && apt-get install -y --no-install-recommends cmake make pkg-config libgtk2.0-dev make gkrellm clang clang-tidy"
        - docker exec -t debian /bin/bash -c "cd $PWD && cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ."
        - |
            docker exec -t debian find "$PWD" \( -name '*.[ch]' -o -name '*.cc' \) -exec clang-check -p $PWD {} +
            R=$?
            docker exec -t debian find "$PWD" \( -name '*.[ch]' -o -name '*.cc' \) -exec clang-tidy -p $PWD {} +
            exit $(($?+R))

    - env: [ ACTION=build ]
      compiler: gcc
    - env: [ ACTION=build ]
      compiler: clang

